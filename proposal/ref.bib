@misc{unikernel-isolation,
	author = {Olivier, Pierre and Barbalace, Antonio and Ravindran, Binoy},
	month = {4},
	title = {{The case for Intra-Unikernel isolation}},
	year = {2020},
	url = {https://www.research.ed.ac.uk/en/publications/the-case-for-intra-unikernel-isolation},
}

@INPROCEEDINGS{security-perspective,
  author={Talbot, Joshua and Pikula, Przemek and Sweetmore, Craig and Rowe, Samuel and Hindy, Hanan and Tachtatzis, Christos and Atkinson, Robert and Bellekens, Xavier},
  booktitle={2020 International Conference on Cyber Security and Protection of Digital Services (Cyber Security)}, 
  title={A Security Perspective on Unikernels}, 
  year={2020},
  volume={},
  number={},
  pages={1-7},
  keywords={Cloud computing;Costs;Operating systems;Ecosystems;Packaging;Containers;Virtual machining;Unikernel;Docker;Container;Security},
  doi={10.1109/CyberSecurity49315.2020.9138883}}

@ARTICLE{hermitux,
  author={Olivier, Pierre and Lefeuvre, Hugo and Chiba, Daniel and Lankes, Stefan and Min, Changwoo and Ravindran, Binoy},
  journal={IEEE Transactions on Computers}, 
  title={A Syscall-Level Binary-Compatible Unikernel}, 
  year={2022},
  volume={71},
  number={9},
  pages={2116-2127},
  keywords={Linux;Libraries;Kernel;Software;Cloud computing;Virtualization;Containers;Unikernels;virtualization;operating systems},
  doi={10.1109/TC.2021.3122896}}

@misc{unikraft,
	title = {{Unikraft}},
	url = {https://github.com/unikraft/},
}

@article{michaels2019assessing,
  title={Assessing unikernel security},
  author={Michaels, Spencer and Dileo, Jeff},
  journal={Technical report, NCC group, Tech. Rep.},
  year={2019}
}

@inproceedings{unikraft-paper,
author = {Kuenzer, Simon and B\u{a}doiu, Vlad-Andrei and Lefeuvre, Hugo and Santhanam, Sharan and Jung, Alexander and Gain, Gaulthier and Soldani, Cyril and Lupu, Costin and Teodorescu, \c{S}tefan and R\u{a}ducanu, Costi and Banu, Cristian and Mathy, Laurent and Deaconescu, R\u{a}zvan and Raiciu, Costin and Huici, Felipe},
title = {Unikraft: fast, specialized unikernels the easy way},
year = {2021},
isbn = {9781450383349},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3447786.3456248},
doi = {10.1145/3447786.3456248},
abstract = {Unikernels are famous for providing excellent performance in terms of boot times, throughput and memory consumption, to name a few metrics. However, they are infamous for making it hard and extremely time consuming to extract such performance, and for needing significant engineering effort in order to port applications to them. We introduce Unikraft, a novel micro-library OS that (1) fully modularizes OS primitives so that it is easy to customize the unikernel and include only relevant components and (2) exposes a set of composable, performance-oriented APIs in order to make it easy for developers to obtain high performance.Our evaluation using off-the-shelf applications such as nginx, SQLite, and Redis shows that running them on Unikraft results in a 1.7x-2.7x performance improvement compared to Linux guests. In addition, Unikraft images for these apps are around 1MB, require less than 10MB of RAM to run, and boot in around 1ms on top of the VMM time (total boot time 3ms-40ms). Unikraft is a Linux Foundation open source project and can be found at www.unikraft.org.},
booktitle = {Proceedings of the Sixteenth European Conference on Computer Systems},
pages = {376–394},
numpages = {19},
location = {Online Event, United Kingdom},
series = {EuroSys '21}
}

@article{unikraft-coming-age,
  title={Unikraft and the coming of age of unikernels},
  author={Lefeuvre, Hugo and Gain, Gaulthier and Dinca, Daniel and Jung, Alexander and Kuenzer, Simon and Badoiu, Vlad-Andrei and Deaconescu, Razvan and Mathy, Laurent and Raiciu, Costin and Olivier, Pierre and others},
  journal={login; The Usenix Magazine},
  year={2021}
}

@inproceedings{flexos,
author = {Lefeuvre, Hugo and B\u{a}doiu, Vlad-Andrei and Jung, Alexander and Teodorescu, Stefan Lucian and Rauch, Sebastian and Huici, Felipe and Raiciu, Costin and Olivier, Pierre},
title = {FlexOS: towards flexible OS isolation},
year = {2022},
isbn = {9781450392051},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3503222.3507759},
doi = {10.1145/3503222.3507759},
abstract = {At design time, modern operating systems are locked in a specific safety and isolation strategy that mixes one or more hardware/software protection mechanisms (e.g. user/kernel separation); revisiting these choices after deployment requires a major refactoring effort. This rigid approach shows its limits given the wide variety of modern applications' safety/performance requirements, when new hardware isolation mechanisms are rolled out, or when existing ones break.  We present FlexOS, a novel OS allowing users to easily specialize the safety and isolation strategy of an OS at compilation/deployment time instead of design time. This modular LibOS is composed of fine-grained components that can be isolated via a range of hardware protection mechanisms with various data sharing strategies and additional software hardening. The OS ships with an exploration technique helping the user navigate the vast safety/performance design space it unlocks. We implement a prototype of the system and demonstrate, for several applications (Redis/Nginx/SQLite), FlexOS' vast configuration space as well as the efficiency of the exploration technique: we evaluate 80 FlexOS configurations for Redis and show how that space can be probabilistically subset to the 5 safest ones under a given performance budget. We also show that, under equivalent configurations, FlexOS performs similarly or better than existing solutions which use fixed safety configurations.},
booktitle = {Proceedings of the 27th ACM International Conference on Architectural Support for Programming Languages and Operating Systems},
pages = {467–482},
numpages = {16},
keywords = {Isolation, Operating Systems, Security},
location = {Lausanne, Switzerland},
series = {ASPLOS '22}
}

@article{rust-linux,
	author = {De Simone, Sergio},
	month = {4},
	title = {{Using Rust to write safe and correct Linux kernel drivers}},
	year = {2021},
	url = {https://www.infoq.com/news/2021/04/rust-linux-kernel-development/},
}

@techreport{nsa2022memory,
  author       = {{National Security Agency}},
  title        = {CSI Software Memory Safety},
  institution  = {National Security Agency},
  year         = {2024},
  month        = {4},
  url          = {https://www.nsa.gov/Press-Room/News-Highlights/Article/Article/3215760/nsa-releases-guidance-on-how-to-protect-against-software-memory-safety-issues/},
  note         = {Accessed: 2023-04-17}
}
